apiVersion: apps/v1
kind: Deployment
metadata:
  name: server-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: server
  template:
    metadata:
      labels:
        app: server
    spec:
      # serviceAccountName: redis-sa
      containers:
      - name: server-container
        # image: manedurphy/grpc-server
        image: k8s/server:latest
        imagePullPolicy: Never
        resources:
          requests:
            memory: "10Mi"
            cpu: "50m"
          limits:
            memory: "75Mi"
            cpu: "175m"
        env:
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: urls
              key: REDIS_URL
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-credentials
              key: redis-password
        # volumeMounts:
        # - name: vault-creds
        #   readOnly: true
        #   mountPath: /mnt/secrets-store
      # volumes:
      # - name: vault-creds
      #   csi:
      #     driver: secrets-store.csi.k8s.io
      #     readOnly: true
      #     volumeAttributes:
      #       secretProviderClass: "redis-spc"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: js-deployment
  labels:
    app: js

spec:
  replicas: 1
  selector:
    matchLabels:
      app: js
  template:
    metadata:
      labels:
        app: js
    spec:
      containers:
      - name: js-container
        # image: manedurphy/grpc-js
        image: k8s/js:latest
        imagePullPolicy: Never
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway-deployment

spec:
  replicas: 1
  selector:
    matchLabels:
      app: gateway
  template:
    metadata:
      labels:
        app: gateway
    spec:
      containers:
      - name: gateway-container
        # image: manedurphy/grpc-gateway
        image: k8s/gateway:latest
        imagePullPolicy: Never
        resources:
          requests:
            memory: "10Mi"
            cpu: "50m"
          limits:
            memory: "50Mi"
            cpu: "125m"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 2
          periodSeconds: 3
          failureThreshold: 1
        startupProbe:
          httpGet:
            path: /healthz
            port: 8081
          failureThreshold: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 3
          failureThreshold: 10
        env:
        - name: BTC_SERVER
          valueFrom:
            configMapKeyRef:
              name: urls
              key: BTC_SERVER
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment

spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis-container
        # image: manedurphy/grpc-redis
        image: k8s/redis:latest
        imagePullPolicy: Never