// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.1
// source: btc.proto

package pb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BitcoinDatum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date  string  `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Value float64 `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *BitcoinDatum) Reset() {
	*x = BitcoinDatum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BitcoinDatum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BitcoinDatum) ProtoMessage() {}

func (x *BitcoinDatum) ProtoReflect() protoreflect.Message {
	mi := &file_btc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BitcoinDatum.ProtoReflect.Descriptor instead.
func (*BitcoinDatum) Descriptor() ([]byte, []int) {
	return file_btc_proto_rawDescGZIP(), []int{0}
}

func (x *BitcoinDatum) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *BitcoinDatum) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type BitcoinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BitcoinRequest) Reset() {
	*x = BitcoinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BitcoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BitcoinRequest) ProtoMessage() {}

func (x *BitcoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_btc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BitcoinRequest.ProtoReflect.Descriptor instead.
func (*BitcoinRequest) Descriptor() ([]byte, []int) {
	return file_btc_proto_rawDescGZIP(), []int{1}
}

type BitcoinResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*BitcoinDatum `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *BitcoinResponse) Reset() {
	*x = BitcoinResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BitcoinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BitcoinResponse) ProtoMessage() {}

func (x *BitcoinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_btc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BitcoinResponse.ProtoReflect.Descriptor instead.
func (*BitcoinResponse) Descriptor() ([]byte, []int) {
	return file_btc_proto_rawDescGZIP(), []int{2}
}

func (x *BitcoinResponse) GetData() []*BitcoinDatum {
	if x != nil {
		return x.Data
	}
	return nil
}

type CryptoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CryptoRequest) Reset() {
	*x = CryptoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CryptoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CryptoRequest) ProtoMessage() {}

func (x *CryptoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_btc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CryptoRequest.ProtoReflect.Descriptor instead.
func (*CryptoRequest) Descriptor() ([]byte, []int) {
	return file_btc_proto_rawDescGZIP(), []int{3}
}

type CryptoDatum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	USD float64 `protobuf:"fixed64,1,opt,name=USD,proto3" json:"USD,omitempty"`
	EUR float64 `protobuf:"fixed64,2,opt,name=EUR,proto3" json:"EUR,omitempty"`
}

func (x *CryptoDatum) Reset() {
	*x = CryptoDatum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CryptoDatum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CryptoDatum) ProtoMessage() {}

func (x *CryptoDatum) ProtoReflect() protoreflect.Message {
	mi := &file_btc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CryptoDatum.ProtoReflect.Descriptor instead.
func (*CryptoDatum) Descriptor() ([]byte, []int) {
	return file_btc_proto_rawDescGZIP(), []int{4}
}

func (x *CryptoDatum) GetUSD() float64 {
	if x != nil {
		return x.USD
	}
	return 0
}

func (x *CryptoDatum) GetEUR() float64 {
	if x != nil {
		return x.EUR
	}
	return 0
}

type CryptoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BTC  *CryptoDatum `protobuf:"bytes,1,opt,name=BTC,proto3" json:"BTC,omitempty"`
	ETH  *CryptoDatum `protobuf:"bytes,2,opt,name=ETH,proto3" json:"ETH,omitempty"`
	DOGE *CryptoDatum `protobuf:"bytes,3,opt,name=DOGE,proto3" json:"DOGE,omitempty"`
}

func (x *CryptoResponse) Reset() {
	*x = CryptoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_btc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CryptoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CryptoResponse) ProtoMessage() {}

func (x *CryptoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_btc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CryptoResponse.ProtoReflect.Descriptor instead.
func (*CryptoResponse) Descriptor() ([]byte, []int) {
	return file_btc_proto_rawDescGZIP(), []int{5}
}

func (x *CryptoResponse) GetBTC() *CryptoDatum {
	if x != nil {
		return x.BTC
	}
	return nil
}

func (x *CryptoResponse) GetETH() *CryptoDatum {
	if x != nil {
		return x.ETH
	}
	return nil
}

func (x *CryptoResponse) GetDOGE() *CryptoDatum {
	if x != nil {
		return x.DOGE
	}
	return nil
}

var File_btc_proto protoreflect.FileDescriptor

var file_btc_proto_rawDesc = []byte{
	0x0a, 0x09, 0x62, 0x74, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x62, 0x74, 0x63,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x38,
	0x0a, 0x0c, 0x42, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x75, 0x6d, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x42, 0x69, 0x74, 0x63,
	0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x38, 0x0a, 0x0f, 0x42, 0x69,
	0x74, 0x63, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x74,
	0x63, 0x2e, 0x42, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x75, 0x6d, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x0f, 0x0a, 0x0d, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x31, 0x0a, 0x0b, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x44,
	0x61, 0x74, 0x75, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x53, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x03, 0x55, 0x53, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x55, 0x52, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x03, 0x45, 0x55, 0x52, 0x22, 0x7e, 0x0a, 0x0e, 0x43, 0x72, 0x79, 0x70,
	0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x03, 0x42, 0x54,
	0x43, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x74, 0x63, 0x2e, 0x43, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x75, 0x6d, 0x52, 0x03, 0x42, 0x54, 0x43, 0x12, 0x22,
	0x0a, 0x03, 0x45, 0x54, 0x48, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x74,
	0x63, 0x2e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x75, 0x6d, 0x52, 0x03, 0x45,
	0x54, 0x48, 0x12, 0x24, 0x0a, 0x04, 0x44, 0x4f, 0x47, 0x45, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x62, 0x74, 0x63, 0x2e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x44, 0x61, 0x74,
	0x75, 0x6d, 0x52, 0x04, 0x44, 0x4f, 0x47, 0x45, 0x32, 0x5f, 0x0a, 0x0e, 0x42, 0x69, 0x74, 0x63,
	0x6f, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x42, 0x69, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x13, 0x2e, 0x62,
	0x74, 0x63, 0x2e, 0x42, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x14, 0x2e, 0x62, 0x74, 0x63, 0x2e, 0x42, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x10, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0a, 0x12,
	0x08, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x74, 0x63, 0x32, 0x5e, 0x0a, 0x0d, 0x43, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x2e, 0x62, 0x74,
	0x63, 0x2e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x13, 0x2e, 0x62, 0x74, 0x63, 0x2e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x12, 0x0b, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x42, 0x23, 0x5a, 0x21, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x61, 0x6e, 0x65, 0x64, 0x75, 0x72, 0x70,
	0x68, 0x79, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x77, 0x65, 0x62, 0x2f, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_btc_proto_rawDescOnce sync.Once
	file_btc_proto_rawDescData = file_btc_proto_rawDesc
)

func file_btc_proto_rawDescGZIP() []byte {
	file_btc_proto_rawDescOnce.Do(func() {
		file_btc_proto_rawDescData = protoimpl.X.CompressGZIP(file_btc_proto_rawDescData)
	})
	return file_btc_proto_rawDescData
}

var file_btc_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_btc_proto_goTypes = []interface{}{
	(*BitcoinDatum)(nil),    // 0: btc.BitcoinDatum
	(*BitcoinRequest)(nil),  // 1: btc.BitcoinRequest
	(*BitcoinResponse)(nil), // 2: btc.BitcoinResponse
	(*CryptoRequest)(nil),   // 3: btc.CryptoRequest
	(*CryptoDatum)(nil),     // 4: btc.CryptoDatum
	(*CryptoResponse)(nil),  // 5: btc.CryptoResponse
}
var file_btc_proto_depIdxs = []int32{
	0, // 0: btc.BitcoinResponse.data:type_name -> btc.BitcoinDatum
	4, // 1: btc.CryptoResponse.BTC:type_name -> btc.CryptoDatum
	4, // 2: btc.CryptoResponse.ETH:type_name -> btc.CryptoDatum
	4, // 3: btc.CryptoResponse.DOGE:type_name -> btc.CryptoDatum
	1, // 4: btc.BitcoinService.GetBitCoinData:input_type -> btc.BitcoinRequest
	3, // 5: btc.CryptoService.GetCryptoData:input_type -> btc.CryptoRequest
	2, // 6: btc.BitcoinService.GetBitCoinData:output_type -> btc.BitcoinResponse
	5, // 7: btc.CryptoService.GetCryptoData:output_type -> btc.CryptoResponse
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_btc_proto_init() }
func file_btc_proto_init() {
	if File_btc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_btc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BitcoinDatum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BitcoinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BitcoinResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CryptoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CryptoDatum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_btc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CryptoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_btc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_btc_proto_goTypes,
		DependencyIndexes: file_btc_proto_depIdxs,
		MessageInfos:      file_btc_proto_msgTypes,
	}.Build()
	File_btc_proto = out.File
	file_btc_proto_rawDesc = nil
	file_btc_proto_goTypes = nil
	file_btc_proto_depIdxs = nil
}
